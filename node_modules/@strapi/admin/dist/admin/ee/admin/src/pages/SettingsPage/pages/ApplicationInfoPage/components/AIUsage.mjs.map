{"version":3,"file":"AIUsage.mjs","sources":["../../../../../../../../../../ee/admin/src/pages/SettingsPage/pages/ApplicationInfoPage/components/AIUsage.tsx"],"sourcesContent":["import { Flex, Typography, Grid, ProgressBar } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useGetAIUsageQuery } from '../../../../../services/ai';\n\nconst StyledProgressBar = styled(ProgressBar)`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.neutral200};\n  > div {\n    background-color: ${({ theme }) => theme.colors.neutral700};\n  }\n`;\n\nconst StyledGridItem = styled(Grid.Item)`\n  ${({ theme }) => theme.breakpoints.large} {\n    grid-column: 7 / 13;\n  }\n`;\n\nexport const AIUsage = () => {\n  const { formatMessage } = useIntl();\n  const { data, isLoading, error } = useGetAIUsageQuery(undefined, {\n    refetchOnMountOrArgChange: true,\n  });\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error || !data) {\n    return null;\n  }\n\n  if (!data.subscription?.cmsAiEnabled) {\n    return null;\n  }\n\n  // Calculate remaining credits and total\n  const totalCredits = data.subscription.cmsAiCreditsBase;\n  const usedCredits = data.cmsAiCreditsUsed;\n  const maxCredits = data.subscription.cmsAiCreditsMaxUsage;\n  const overage = usedCredits - totalCredits;\n  const percentRemaining = (usedCredits / totalCredits) * 100;\n  const percentOverage = (usedCredits / maxCredits) * 100;\n\n  const isInOverages = overage > 0 && maxCredits !== totalCredits;\n\n  return (\n    <StyledGridItem col={6} s={12} direction=\"column\" alignItems=\"start\" gap={2}>\n      <Typography variant=\"sigma\" textColor=\"neutral600\">\n        {formatMessage({\n          id: 'Settings.application.ai-usage',\n          defaultMessage: 'AI Usage',\n        })}\n      </Typography>\n      <Flex gap={2} direction=\"column\" alignItems=\"flex-start\">\n        {!isInOverages && (\n          <>\n            <Flex width=\"100%\">\n              <StyledProgressBar value={percentRemaining} size=\"M\" />\n            </Flex>\n            <Typography variant=\"omega\">\n              {`${usedCredits.toFixed(2)} credits used from ${totalCredits} credits available in your plan`}\n            </Typography>\n          </>\n        )}\n        {isInOverages && (\n          <>\n            <Flex width=\"100%\">\n              <StyledProgressBar value={percentOverage} size=\"M\" color=\"danger\" />\n            </Flex>\n            <Typography variant=\"omega\" textColor=\"danger600\">\n              {`${overage.toFixed(2)} credits used above the ${totalCredits} credits available in your plan`}\n            </Typography>\n          </>\n        )}\n      </Flex>\n    </StyledGridItem>\n  );\n};\n"],"names":["StyledProgressBar","styled","ProgressBar","theme","colors","neutral200","neutral700","StyledGridItem","Grid","Item","breakpoints","large","AIUsage","formatMessage","useIntl","data","isLoading","error","useGetAIUsageQuery","undefined","refetchOnMountOrArgChange","subscription","cmsAiEnabled","totalCredits","cmsAiCreditsBase","usedCredits","cmsAiCreditsUsed","maxCredits","cmsAiCreditsMaxUsage","overage","percentRemaining","percentOverage","isInOverages","_jsxs","col","s","direction","alignItems","gap","_jsx","Typography","variant","textColor","id","defaultMessage","Flex","_Fragment","width","value","size","toFixed","color"],"mappings":"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"}