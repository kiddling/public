{"version":3,"file":"NavUser.js","sources":["../../../../../../admin/src/components/MainNav/NavUser.tsx"],"sourcesContent":["import { Flex, Menu, VisuallyHidden, Avatar, Typography, Badge } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useAuth } from '../../features/Auth';\nimport { getInitials, getDisplayName } from '../../utils/users';\n\nconst MenuTrigger = styled(Menu.Trigger)`\n  padding: 0;\n\n  ${({ theme }) => theme.breakpoints.large} {\n    width: 4rem;\n    height: 4rem;\n    justify-content: center;\n  }\n`;\n\nconst MenuIcon = styled(Flex)`\n  height: ${({ theme }) => theme.spaces[7]};\n  width: ${({ theme }) => theme.spaces[7]};\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst MenuContent = styled(Menu.Content)`\n  max-height: fit-content;\n  width: 200px;\n`;\n\nconst UserInfo = styled(Flex)`\n  && {\n    padding: ${({ theme }) => theme.spaces[3]};\n  }\n  align-items: flex-start;\n`;\n\nconst BadgeWrapper = styled(Flex)`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({ theme }) => theme.spaces[1]};\n\n  width: 100%;\n`;\nconst StyledTypography = styled(Typography)`\n  word-break: break-word;\n  margin-bottom: ${({ theme }) => theme.spaces[3]};\n`;\n\nexport interface NavUserProps {\n  initials?: string;\n  children?: React.ReactNode;\n  showDisplayName?: boolean;\n}\n\nexport const NavUser = ({\n  initials,\n  showDisplayName = false,\n  children,\n  ...props\n}: NavUserProps) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const user = useAuth('User', (state) => state.user);\n  const logout = useAuth('Logout', (state) => state.logout);\n  const userDisplayName = getDisplayName(user);\n\n  const handleProfile = () => {\n    const redirection = '/me';\n    navigate(redirection);\n  };\n\n  const handleLogout = () => {\n    const redirection = '/auth/login';\n    logout();\n    navigate(redirection);\n  };\n\n  return (\n    <Flex {...props}>\n      <Menu.Root>\n        <MenuTrigger endIcon={null} fullWidth justifyContent=\"flex-start\">\n          <Flex alignItems=\"center\" gap={3}>\n            <MenuIcon justifyContent=\"center\">\n              <Avatar.Item delayMs={0} fallback={initials || getInitials(user)} />\n            </MenuIcon>\n            {showDisplayName ? (\n              <Typography variant=\"omega\">{children || userDisplayName}</Typography>\n            ) : (\n              <VisuallyHidden tag=\"span\">{children || userDisplayName}</VisuallyHidden>\n            )}\n          </Flex>\n        </MenuTrigger>\n\n        <MenuContent popoverPlacement=\"top-start\" zIndex={3}>\n          <UserInfo direction=\"column\" gap={0} alignItems=\"flex-start\">\n            <Typography variant=\"omega\" fontWeight=\"bold\" textTransform=\"none\">\n              {children || userDisplayName}\n            </Typography>\n            <StyledTypography variant=\"pi\" textColor=\"neutral600\">\n              {user?.email}\n            </StyledTypography>\n            <BadgeWrapper>\n              {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\n            </BadgeWrapper>\n          </UserInfo>\n\n          <Menu.Separator />\n\n          <Menu.Item onSelect={handleProfile}>\n            {formatMessage({\n              id: 'global.profile.settings',\n              defaultMessage: 'Profile settings',\n            })}\n          </Menu.Item>\n\n          <Menu.Item variant=\"danger\" onSelect={handleLogout} color=\"danger600\">\n            {formatMessage({\n              id: 'app.components.LeftMenu.logout',\n              defaultMessage: 'Log out',\n            })}\n          </Menu.Item>\n        </MenuContent>\n      </Menu.Root>\n    </Flex>\n  );\n};\n"],"names":["MenuTrigger","styled","Menu","Trigger","theme","breakpoints","large","MenuIcon","Flex","spaces","MenuContent","Content","UserInfo","BadgeWrapper","StyledTypography","Typography","NavUser","initials","showDisplayName","children","props","formatMessage","useIntl","navigate","useNavigate","user","useAuth","state","logout","userDisplayName","getDisplayName","handleProfile","redirection","handleLogout","_jsx","_jsxs","Root","endIcon","fullWidth","justifyContent","alignItems","gap","Avatar","Item","delayMs","fallback","getInitials","variant","VisuallyHidden","tag","popoverPlacement","zIndex","direction","fontWeight","textTransform","textColor","email","roles","map","role","Badge","name","id","Separator","onSelect","defaultMessage","color"],"mappings":"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"}