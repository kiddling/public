{"version":3,"file":"Layout.mjs","sources":["../../../../../../admin/src/pages/Settings/Layout.tsx"],"sourcesContent":["import { Box } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { Navigate, Outlet, useMatch } from 'react-router-dom';\n\nimport { Layouts } from '../../components/Layouts/Layout';\nimport { Page } from '../../components/PageHelpers';\nimport { SubNav } from '../../components/SubNav';\nimport { RESPONSIVE_DEFAULT_SPACING } from '../../constants/theme';\nimport { BackButton } from '../../features/BackButton';\nimport { useIsMobile } from '../../hooks/useMediaQuery';\nimport { useSettingsMenu } from '../../hooks/useSettingsMenu';\n\nimport { SettingsNav } from './components/SettingsNav';\n\nconst Layout = () => {\n  /**\n   * This ensures we're capturing the settingId from the URL\n   * but also lets any nesting after that pass.\n   */\n  const match = useMatch('/settings/:settingId/*');\n  const { formatMessage } = useIntl();\n  const { isLoading } = useSettingsMenu();\n  const isMobile = useIsMobile();\n\n  // Since the useSettingsMenu hook can make API calls in order to check the links permissions\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  // On /settings base route\n  if (!match?.params.settingId) {\n    // On desktop: redirect to first settings page\n    if (!isMobile) {\n      return <Navigate to=\"application-infos\" />;\n    }\n\n    // On mobile: show navigation page\n    return (\n      <>\n        <Page.Title>\n          {formatMessage({\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          })}\n        </Page.Title>\n        <SubNav.PageWrapper>\n          <SettingsNav isFullPage />\n        </SubNav.PageWrapper>\n      </>\n    );\n  }\n\n  return (\n    <Layouts.Root sideNav={<SettingsNav />}>\n      <Page.Title>\n        {formatMessage({\n          id: 'global.settings',\n          defaultMessage: 'Settings',\n        })}\n      </Page.Title>\n      <Box\n        display={{ initial: 'block', medium: 'none' }}\n        paddingLeft={RESPONSIVE_DEFAULT_SPACING}\n        paddingRight={RESPONSIVE_DEFAULT_SPACING}\n        paddingTop={RESPONSIVE_DEFAULT_SPACING}\n      >\n        <BackButton fallback=\"/settings\" />\n      </Box>\n      <Outlet />\n    </Layouts.Root>\n  );\n};\n\nexport { Layout };\n"],"names":["Layout","match","useMatch","formatMessage","useIntl","isLoading","useSettingsMenu","isMobile","useIsMobile","_jsx","Page","Loading","params","settingId","Navigate","to","_jsxs","_Fragment","Title","id","defaultMessage","SubNav","PageWrapper","SettingsNav","isFullPage","Layouts","Root","sideNav","Box","display","initial","medium","paddingLeft","RESPONSIVE_DEFAULT_SPACING","paddingRight","paddingTop","BackButton","fallback","Outlet"],"mappings":";;;;;;;;;;;;;AAcA,MAAMA,MAAS,GAAA,IAAA;AACb;;;MAIA,MAAMC,QAAQC,QAAS,CAAA,wBAAA,CAAA;IACvB,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAC1B,MAAM,EAAEC,SAAS,EAAE,GAAGC,eAAAA,EAAAA;AACtB,IAAA,MAAMC,QAAWC,GAAAA,WAAAA,EAAAA;;;AAIjB,IAAA,IAAIH,SAAW,EAAA;QACb,qBAAOI,GAAA,CAACC,KAAKC,OAAO,EAAA,EAAA,CAAA;AACtB;;IAGA,IAAI,CAACV,KAAOW,EAAAA,MAAAA,CAAOC,SAAW,EAAA;;AAE5B,QAAA,IAAI,CAACN,QAAU,EAAA;AACb,YAAA,qBAAOE,GAACK,CAAAA,QAAAA,EAAAA;gBAASC,EAAG,EAAA;;AACtB;;QAGA,qBACEC,IAAA,CAAAC,QAAA,EAAA;;AACE,8BAAAR,GAAA,CAACC,KAAKQ,KAAK,EAAA;8BACRf,aAAc,CAAA;wBACbgB,EAAI,EAAA,iBAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA;;AAEF,8BAAAX,GAAA,CAACY,OAAOC,WAAW,EAAA;AACjB,oBAAA,QAAA,gBAAAb,GAACc,CAAAA,WAAAA,EAAAA;wBAAYC,UAAU,EAAA;;;;;AAI/B;IAEA,qBACER,IAAA,CAACS,QAAQC,IAAI,EAAA;AAACC,QAAAA,OAAAA,gBAASlB,GAACc,CAAAA,WAAAA,EAAAA,EAAAA,CAAAA;;AACtB,0BAAAd,GAAA,CAACC,KAAKQ,KAAK,EAAA;0BACRf,aAAc,CAAA;oBACbgB,EAAI,EAAA,iBAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA;;0BAEFX,GAACmB,CAAAA,GAAAA,EAAAA;gBACCC,OAAS,EAAA;oBAAEC,OAAS,EAAA,OAAA;oBAASC,MAAQ,EAAA;AAAO,iBAAA;gBAC5CC,WAAaC,EAAAA,0BAAAA;gBACbC,YAAcD,EAAAA,0BAAAA;gBACdE,UAAYF,EAAAA,0BAAAA;AAEZ,gBAAA,QAAA,gBAAAxB,GAAC2B,CAAAA,UAAAA,EAAAA;oBAAWC,QAAS,EAAA;;;0BAEvB5B,GAAC6B,CAAAA,MAAAA,EAAAA,EAAAA;;;AAGP;;;;"}