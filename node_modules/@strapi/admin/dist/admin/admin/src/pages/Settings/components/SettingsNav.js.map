{"version":3,"file":"SettingsNav.js","sources":["../../../../../../../admin/src/pages/Settings/components/SettingsNav.tsx"],"sourcesContent":["import { Badge, Divider } from '@strapi/design-system';\nimport { Lightning } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useLicenseLimits } from '../../../../../ee/admin/src/hooks/useLicenseLimits';\nimport { SubNav } from '../../../components/SubNav';\nimport { useTracking } from '../../../features/Tracking';\nimport { useSettingsMenu } from '../../../hooks/useSettingsMenu';\n\ntype LinkId =\n  | 'content-releases'\n  | 'review-workflows'\n  | 'sso'\n  | 'auditLogs'\n  | 'auditLogs-purchase-page';\n\ntype FeatureName = 'cms-content-releases' | 'review-workflows' | 'sso' | 'audit-logs';\n\nconst StyledBadge = styled(Badge)`\n  border-radius: 50%;\n  padding: ${({ theme }) => theme.spaces[2]};\n  height: 2rem;\n`;\n\nconst SettingsNav = ({ isFullPage = false }: { isFullPage?: boolean }) => {\n  const { menu } = useSettingsMenu();\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const { pathname } = useLocation();\n  const { license } = useLicenseLimits();\n\n  const availableFeatureNames = license?.features.map((feature) => feature.name);\n\n  const linksIdsToLicenseFeaturesNames: Record<LinkId, FeatureName> = {\n    'content-releases': 'cms-content-releases',\n    'review-workflows': 'review-workflows',\n    sso: 'sso',\n    auditLogs: 'audit-logs',\n    'auditLogs-purchase-page': 'audit-logs',\n  };\n\n  const filteredMenu = menu.filter(\n    (section) => !section.links.every((link) => link.isDisplayed === false)\n  );\n\n  const sections = filteredMenu.map((section) => {\n    return {\n      ...section,\n      title: section.intlLabel,\n      links: section.links.map((link) => {\n        return {\n          ...link,\n          id: link.id as LinkId,\n          title: link.intlLabel,\n          name: link.id,\n          to: link.to.startsWith('/') ? link.to : `/settings/${link.to}`,\n        };\n      }),\n    };\n  });\n\n  const label = formatMessage({\n    id: 'global.settings',\n    defaultMessage: 'Settings',\n  });\n\n  const handleClickOnLink = (destination: string) => () => {\n    trackUsage('willNavigate', { from: pathname, to: destination });\n  };\n\n  return (\n    <SubNav.Main aria-label={label}>\n      {!isFullPage && (\n        <>\n          <SubNav.Header label={label} />\n          <Divider />\n        </>\n      )}\n      <SubNav.Content>\n        {isFullPage && <SubNav.Header label={label} />}\n        <SubNav.Sections>\n          {sections.map((section) => (\n            <SubNav.Section key={section.id} label={formatMessage(section.intlLabel)}>\n              {section.links.map((link) => {\n                return (\n                  <SubNav.Link\n                    to={link.to}\n                    onClick={handleClickOnLink(link.to)}\n                    key={link.id}\n                    label={formatMessage(link.intlLabel)}\n                    endAction={\n                      <>\n                        {link?.licenseOnly && (\n                          <Lightning\n                            fill={\n                              (availableFeatureNames || []).includes(\n                                linksIdsToLicenseFeaturesNames[link.id]\n                              )\n                                ? 'primary600'\n                                : 'neutral300'\n                            }\n                            width=\"1.5rem\"\n                            height=\"1.5rem\"\n                          />\n                        )}\n                        {link?.hasNotification && (\n                          <StyledBadge\n                            aria-label=\"Notification\"\n                            backgroundColor=\"primary600\"\n                            textColor=\"neutral0\"\n                          >\n                            1\n                          </StyledBadge>\n                        )}\n                      </>\n                    }\n                  >\n                    {formatMessage(link.intlLabel)}\n                  </SubNav.Link>\n                );\n              })}\n            </SubNav.Section>\n          ))}\n        </SubNav.Sections>\n      </SubNav.Content>\n    </SubNav.Main>\n  );\n};\n\nexport { SettingsNav };\n"],"names":["StyledBadge","styled","Badge","theme","spaces","SettingsNav","isFullPage","menu","useSettingsMenu","formatMessage","useIntl","trackUsage","useTracking","pathname","useLocation","license","useLicenseLimits","availableFeatureNames","features","map","feature","name","linksIdsToLicenseFeaturesNames","sso","auditLogs","filteredMenu","filter","section","links","every","link","isDisplayed","sections","title","intlLabel","id","to","startsWith","label","defaultMessage","handleClickOnLink","destination","from","_jsxs","SubNav","Main","aria-label","_Fragment","_jsx","Header","Divider","Content","Sections","Section","Link","onClick","endAction","licenseOnly","Lightning","fill","includes","width","height","hasNotification","backgroundColor","textColor"],"mappings":"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"}