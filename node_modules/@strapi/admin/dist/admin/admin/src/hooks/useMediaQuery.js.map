{"version":3,"file":"useMediaQuery.js","sources":["../../../../../admin/src/hooks/useMediaQuery.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useTheme } from 'styled-components';\n\n/**\n * Hook to detect if a media query matches\n * @param query - Media query string (e.g., '(min-width: 768px)' or theme.breakpoints.large)\n * @returns boolean indicating if the media query matches\n */\nexport const useMediaQuery = (query: string): boolean => {\n  const cleanQuery = query.replace('@media', '').trim();\n\n  const [matches, setMatches] = React.useState(() => window.matchMedia(cleanQuery).matches);\n\n  React.useEffect(() => {\n    const mediaQuery = window.matchMedia(cleanQuery);\n    const handler = (e: MediaQueryListEvent) => setMatches(e.matches);\n\n    mediaQuery.addEventListener('change', handler);\n\n    return () => mediaQuery.removeEventListener('change', handler);\n  }, [cleanQuery]);\n\n  return matches;\n};\n\n/**\n * Hook to detect if the current viewport is desktop size\n * Uses the theme's large breakpoint\n */\nexport const useIsDesktop = (): boolean => {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.large);\n};\n\n/**\n * Hook to detect if the current viewport is tablet size\n * Uses the theme's medium breakpoint\n */\nexport const useIsTablet = (): boolean => {\n  const theme = useTheme();\n  const isTabletOrAbove = useMediaQuery(theme.breakpoints.medium);\n  const isDesktop = useMediaQuery(theme.breakpoints.large);\n  return isTabletOrAbove && !isDesktop;\n};\n\n/**\n * Hook to detect if the current viewport is mobile size\n * Uses the theme's medium breakpoint (inverted)\n */\nexport const useIsMobile = (): boolean => {\n  const theme = useTheme();\n  return !useMediaQuery(theme.breakpoints.medium);\n};\n"],"names":["useMediaQuery","query","cleanQuery","replace","trim","matches","setMatches","React","useState","window","matchMedia","useEffect","mediaQuery","handler","e","addEventListener","removeEventListener","useIsDesktop","theme","useTheme","breakpoints","large","useIsTablet","isTabletOrAbove","medium","isDesktop","useIsMobile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;IAKaA,MAAAA,aAAAA,GAAgB,CAACC,KAAAA,GAAAA;AAC5B,IAAA,MAAMC,aAAaD,KAAME,CAAAA,OAAO,CAAC,QAAA,EAAU,IAAIC,IAAI,EAAA;AAEnD,IAAA,MAAM,CAACC,OAAAA,EAASC,UAAW,CAAA,GAAGC,gBAAMC,CAAAA,QAAQ,CAAC,IAAMC,MAAOC,CAAAA,UAAU,CAACR,UAAAA,CAAAA,CAAYG,OAAO,CAAA;AAExFE,IAAAA,gBAAAA,CAAMI,SAAS,CAAC,IAAA;QACd,MAAMC,UAAAA,GAAaH,MAAOC,CAAAA,UAAU,CAACR,UAAAA,CAAAA;AACrC,QAAA,MAAMW,OAAU,GAAA,CAACC,CAA2BR,GAAAA,UAAAA,CAAWQ,EAAET,OAAO,CAAA;QAEhEO,UAAWG,CAAAA,gBAAgB,CAAC,QAAUF,EAAAA,OAAAA,CAAAA;AAEtC,QAAA,OAAO,IAAMD,UAAAA,CAAWI,mBAAmB,CAAC,QAAUH,EAAAA,OAAAA,CAAAA;KACrD,EAAA;AAACX,QAAAA;AAAW,KAAA,CAAA;IAEf,OAAOG,OAAAA;AACT;AAEA;;;UAIaY,YAAe,GAAA,IAAA;AAC1B,IAAA,MAAMC,KAAQC,GAAAA,eAAAA,EAAAA;AACd,IAAA,OAAOnB,aAAckB,CAAAA,KAAAA,CAAME,WAAW,CAACC,KAAK,CAAA;AAC9C;AAEA;;;UAIaC,WAAc,GAAA,IAAA;AACzB,IAAA,MAAMJ,KAAQC,GAAAA,eAAAA,EAAAA;AACd,IAAA,MAAMI,eAAkBvB,GAAAA,aAAAA,CAAckB,KAAME,CAAAA,WAAW,CAACI,MAAM,CAAA;AAC9D,IAAA,MAAMC,SAAYzB,GAAAA,aAAAA,CAAckB,KAAME,CAAAA,WAAW,CAACC,KAAK,CAAA;AACvD,IAAA,OAAOE,mBAAmB,CAACE,SAAAA;AAC7B;AAEA;;;UAIaC,WAAc,GAAA,IAAA;AACzB,IAAA,MAAMR,KAAQC,GAAAA,eAAAA,EAAAA;AACd,IAAA,OAAO,CAACnB,aAAAA,CAAckB,KAAME,CAAAA,WAAW,CAACI,MAAM,CAAA;AAChD;;;;;;;"}