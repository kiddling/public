{"version":3,"file":"ContentTypeBuilderNav.js","sources":["../../../../admin/src/components/ContentTypeBuilderNav/ContentTypeBuilderNav.tsx"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\n\nimport { ConfirmDialog, SubNav, tours } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Searchbar,\n  Button,\n  Flex,\n  Typography,\n  Divider,\n  Menu,\n  VisuallyHidden,\n  Dialog,\n} from '@strapi/design-system';\nimport { ArrowClockwise, Cross, More } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { useDataManager } from '../DataManager/useDataManager';\nimport { Status } from '../Status';\n\nimport { useContentTypeBuilderMenu } from './useContentTypeBuilderMenu';\n\nconst ArrowCounterClockwise = styled(ArrowClockwise)`\n  transform: scaleX(-1);\n`;\n\nconst DiscardAllMenuItem = styled(Menu.Item)`\n  color: ${({ theme }) => theme.colors.danger600};\n\n  &:hover {\n    background: ${({ theme, disabled }) => !disabled && theme.colors.danger100};\n  }\n`;\n\nexport const ContentTypeBuilderNav = () => {\n  const { menu, search } = useContentTypeBuilderMenu();\n  const { saveSchema, isModified, history, isInDevelopmentMode } = useDataManager();\n\n  const { formatMessage } = useIntl();\n\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const [discardConfirmationModalIsOpen, setDiscardConfirmationModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!isInDevelopmentMode) {\n      return;\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey || e.metaKey) {\n        if (e.key === 'Enter') {\n          if (isModified) {\n            e.preventDefault();\n            saveSchema();\n          }\n        } else if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault(); // Prevent browser default undo (e.g., in input fields)\n          history.undo();\n        } else if (e.key === 'y' || (e.shiftKey && e.key === 'z') || e.key === 'Z') {\n          e.preventDefault(); // Prevent browser default redo (e.g., in input fields)\n          history.redo();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n\n  const discardHandler = () => {\n    setDiscardConfirmationModalIsOpen(true);\n  };\n\n  const discardChanges = () => {\n    setMenuIsOpen(false);\n    setDiscardConfirmationModalIsOpen(false);\n    history.discardAllChanges();\n  };\n\n  const undoHandler = () => {\n    history.undo();\n  };\n\n  const redoHandler = () => {\n    history.redo();\n  };\n\n  const pluginName = formatMessage({\n    id: getTrad('plugin.name'),\n    defaultMessage: 'Content-Type Builder',\n  });\n\n  return (\n    <SubNav.Main aria-label={pluginName}>\n      <SubNav.Header label={pluginName} />\n      <Divider background=\"neutral150\" />\n      <SubNav.Content>\n        <Flex padding={5} gap={3} direction={'column'} alignItems={'stretch'}>\n          <tours.contentTypeBuilder.Save>\n            <Flex gap={2}>\n              <Button\n                flex={1}\n                onClick={(e) => {\n                  e.preventDefault();\n                  saveSchema();\n                }}\n                type=\"submit\"\n                disabled={!isModified || !isInDevelopmentMode}\n                fullWidth\n                size=\"S\"\n              >\n                {formatMessage({\n                  id: 'global.save',\n                  defaultMessage: 'Save',\n                })}\n              </Button>\n              <Menu.Root open={menuIsOpen} onOpenChange={setMenuIsOpen}>\n                <Menu.Trigger\n                  size=\"S\"\n                  endIcon={null}\n                  paddingTop=\"4px\"\n                  paddingLeft=\"7px\"\n                  paddingRight=\"7px\"\n                  variant=\"tertiary\"\n                >\n                  <More fill=\"neutral500\" aria-hidden focusable={false} />\n                  <VisuallyHidden tag=\"span\">\n                    {formatMessage({\n                      id: 'global.more.actions',\n                      defaultMessage: 'More actions',\n                    })}\n                  </VisuallyHidden>\n                </Menu.Trigger>\n                <Menu.Content zIndex={1}>\n                  <Menu.Item\n                    disabled={!history.canUndo || !isInDevelopmentMode}\n                    onSelect={undoHandler}\n                    startIcon={<ArrowCounterClockwise />}\n                  >\n                    {formatMessage({\n                      id: 'global.last-change.undo',\n                      defaultMessage: 'Undo last change',\n                    })}\n                  </Menu.Item>\n                  <Menu.Item\n                    disabled={!history.canRedo || !isInDevelopmentMode}\n                    onSelect={redoHandler}\n                    startIcon={<ArrowClockwise />}\n                  >\n                    {formatMessage({\n                      id: 'global.last-change.redo',\n                      defaultMessage: 'Redo last change',\n                    })}\n                  </Menu.Item>\n                  <Menu.Separator />\n                  <DiscardAllMenuItem\n                    disabled={!history.canDiscardAll || !isInDevelopmentMode}\n                    onSelect={discardHandler}\n                  >\n                    <Flex gap={2}>\n                      <Cross />\n                      <Typography>\n                        {formatMessage({\n                          id: 'global.last-changes.discard',\n                          defaultMessage: 'Discard last changes',\n                        })}\n                      </Typography>\n                    </Flex>\n                  </DiscardAllMenuItem>\n                </Menu.Content>\n              </Menu.Root>\n            </Flex>\n          </tours.contentTypeBuilder.Save>\n\n          <Searchbar\n            value={search.value}\n            onChange={(e) => search.onChange(e.target.value)}\n            onClear={() => search.onChange('')}\n            placeholder={formatMessage({\n              id: getTrad('search.placeholder'),\n              defaultMessage: 'Search',\n            })}\n            size=\"S\"\n            // eslint-disable-next-line react/no-children-prop\n            children={undefined}\n            name={'search_contentType'}\n            clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n            aria-label={formatMessage({\n              id: getTrad('search.placeholder'),\n              defaultMessage: 'Search',\n            })}\n          />\n        </Flex>\n        <SubNav.Sections>\n          {menu.map((section) => (\n            <Fragment key={section.name}>\n              <SubNav.Section\n                label={formatMessage({\n                  id: section.title.id,\n                  defaultMessage: section.title.defaultMessage,\n                })}\n                link={\n                  section.customLink && {\n                    label: formatMessage({\n                      id: section.customLink?.id,\n                      defaultMessage: section.customLink?.defaultMessage,\n                    }),\n                    onClick: section.customLink?.onClick,\n                  }\n                }\n                sectionId={section.name}\n              >\n                {section.links.map((link) => {\n                  const linkLabel = formatMessage({ id: link.name, defaultMessage: link.title });\n\n                  if ('links' in link) {\n                    return (\n                      <SubNav.SubSection key={link.name} label={link.title}>\n                        {link.links.map((subLink) => {\n                          const label = formatMessage({\n                            id: subLink.name,\n                            defaultMessage: subLink.title,\n                          });\n\n                          return (\n                            <SubNav.Link\n                              to={subLink.to}\n                              key={subLink.name}\n                              label={label}\n                              endAction={\n                                <Box tag=\"span\" textAlign=\"center\" width={'24px'}>\n                                  <Status status={subLink.status} />\n                                </Box>\n                              }\n                            />\n                          );\n                        })}\n                      </SubNav.SubSection>\n                    );\n                  }\n\n                  return (\n                    <SubNav.Link\n                      to={link.to}\n                      key={link.name}\n                      label={linkLabel}\n                      endAction={\n                        <Box tag=\"span\" textAlign=\"center\" width={'24px'}>\n                          <Status status={link.status} />\n                        </Box>\n                      }\n                    />\n                  );\n                })}\n              </SubNav.Section>\n            </Fragment>\n          ))}\n        </SubNav.Sections>\n      </SubNav.Content>\n      <Dialog.Root\n        open={discardConfirmationModalIsOpen}\n        onOpenChange={setDiscardConfirmationModalIsOpen}\n      >\n        <ConfirmDialog onConfirm={discardChanges}>\n          {formatMessage({\n            id: getTrad('popUpWarning.discardAll.message'),\n            defaultMessage: 'Are you sure you want to discard all changes?',\n          })}\n        </ConfirmDialog>\n      </Dialog.Root>\n    </SubNav.Main>\n  );\n};\n"],"names":["ArrowCounterClockwise","styled","ArrowClockwise","DiscardAllMenuItem","Menu","Item","theme","colors","danger600","disabled","danger100","ContentTypeBuilderNav","menu","search","useContentTypeBuilderMenu","saveSchema","isModified","history","isInDevelopmentMode","useDataManager","formatMessage","useIntl","menuIsOpen","setMenuIsOpen","useState","discardConfirmationModalIsOpen","setDiscardConfirmationModalIsOpen","useEffect","onKeyDown","e","ctrlKey","metaKey","key","preventDefault","shiftKey","undo","redo","document","addEventListener","removeEventListener","discardHandler","discardChanges","discardAllChanges","undoHandler","redoHandler","pluginName","id","getTrad","defaultMessage","_jsxs","SubNav","Main","aria-label","_jsx","Header","label","Divider","background","Content","Flex","padding","gap","direction","alignItems","tours","contentTypeBuilder","Save","Button","flex","onClick","type","fullWidth","size","Root","open","onOpenChange","Trigger","endIcon","paddingTop","paddingLeft","paddingRight","variant","More","fill","aria-hidden","focusable","VisuallyHidden","tag","zIndex","canUndo","onSelect","startIcon","canRedo","Separator","canDiscardAll","Cross","Typography","Searchbar","value","onChange","target","onClear","placeholder","children","undefined","name","clearLabel","Sections","map","section","Fragment","Section","title","link","customLink","sectionId","links","linkLabel","SubSection","subLink","Link","to","endAction","Box","textAlign","width","Status","status","Dialog","ConfirmDialog","onConfirm"],"mappings":"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"}