{"version":3,"file":"FeedbackModal.js","sources":["../../../../admin/src/components/AIChat/FeedbackModal.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, useState } from 'react';\n\nimport { useNotification } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Flex,\n  Typography,\n  Textarea,\n  Button,\n  Grid,\n  Checkbox,\n  Modal,\n} from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nimport { useFeedback } from './hooks/useFeedback';\nimport { useTranslations } from './hooks/useTranslations';\n\nimport type { FeedbackReasonIds } from './lib/types/feedback';\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\ninterface FeedbackModalContextType {\n  isFeedbackModalOpen: boolean;\n  currentMessageId: string | null;\n  openFeedbackModal: (messageId: string) => void;\n  closeFeedbackModal: () => void;\n}\n\nconst FeedbackModalContext = createContext<FeedbackModalContextType>({\n  isFeedbackModalOpen: false,\n  currentMessageId: null,\n  openFeedbackModal: () => {},\n  closeFeedbackModal: () => {},\n});\n\nexport const useFeedbackModal = () => useContext(FeedbackModalContext);\n\nexport const FeedbackProvider = ({ children }: { children: React.ReactNode }) => {\n  const [isFeedbackModalOpen, setIsFeedbackModalOpen] = useState(false);\n  const [currentMessageId, setCurrentMessageId] = useState<string | null>(null);\n\n  const openFeedbackModal = (messageId: string) => {\n    setCurrentMessageId(messageId);\n    setIsFeedbackModalOpen(true);\n  };\n\n  const closeFeedbackModal = () => {\n    setIsFeedbackModalOpen(false);\n    setCurrentMessageId(null);\n  };\n\n  return (\n    <FeedbackModalContext.Provider\n      value={{ isFeedbackModalOpen, currentMessageId, openFeedbackModal, closeFeedbackModal }}\n    >\n      {isFeedbackModalOpen && currentMessageId && <FeedbackModal />}\n      {children}\n    </FeedbackModalContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Feedback Option\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FeedbackOptionProps {\n  id: FeedbackReasonIds;\n  label: string;\n  selected: boolean;\n  onClick: (id: FeedbackReasonIds) => void;\n}\n\nconst FeedbackOptionWrapper = styled(Flex)`\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.neutral100};\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.colors.primary100};\n    border-color: ${({ theme }) => theme.colors.primary200};\n  }\n`;\n\nconst FeedbackOption: React.FC<FeedbackOptionProps> = ({ id, label, selected, onClick }) => {\n  return (\n    <FeedbackOptionWrapper\n      className={selected ? 'selected' : ''}\n      justifyContent=\"space-between\"\n      hasRadius\n      width=\"100%\"\n      cursor=\"pointer\"\n      borderColor=\"neutral200\"\n      padding={3}\n      gap={3}\n      onClick={() => onClick(id)}\n    >\n      <Typography variant=\"omega\" fontWeight=\"bold\">\n        {label}\n      </Typography>\n      <Checkbox\n        name={`feedback-${id}`}\n        value={id}\n        checked={selected}\n        onChange={() => onClick(id)}\n      />\n    </FeedbackOptionWrapper>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Modal\n * -----------------------------------------------------------------------------------------------*/\n\nexport const FeedbackModal: React.FC = () => {\n  const [feedbackText, setFeedbackText] = useState('');\n  const [selectedReasons, setSelectedReasons] = useState<FeedbackReasonIds[]>([]);\n\n  const { t } = useTranslations();\n  const { toggleNotification } = useNotification();\n  const { closeFeedbackModal, currentMessageId } = useFeedbackModal();\n  const { downvoteMessage, isPending } = useFeedback();\n\n  const feedbackReasons = [\n    {\n      id: 'invalid_schema',\n      label: t('chat.feedback.reason.invalid_schema', 'Invalid schema'),\n    },\n    {\n      id: 'bad_recommendation',\n      label: t('chat.feedback.reason.bad_recommendation', 'Bad recommendation'),\n    },\n    {\n      id: 'slow',\n      label: t('chat.feedback.reason.slow', 'Slow'),\n    },\n    {\n      id: 'instructions_ignored',\n      label: t('chat.feedback.reason.instructions_ignored', 'Instructions ignored'),\n    },\n    {\n      id: 'being_lazy',\n      label: t('chat.feedback.reason.being_lazy', 'Being lazy'),\n    },\n    {\n      id: 'other',\n      label: t('chat.feedback.reason.other', 'Other'),\n    },\n  ] satisfies { id: FeedbackReasonIds; label: string }[];\n\n  const handleReasonSelect = (id: FeedbackReasonIds) => {\n    setSelectedReasons((prevSelected) => {\n      // If already selected, remove it\n      if (prevSelected.includes(id)) {\n        return prevSelected.filter((reasonId) => reasonId !== id);\n      }\n      // Otherwise add it\n      return [...prevSelected, id];\n    });\n  };\n\n  const handleSubmitFeedback = async () => {\n    if (selectedReasons.length === 0) return;\n\n    try {\n      await downvoteMessage(currentMessageId as string, feedbackText, selectedReasons);\n\n      setFeedbackText('');\n      setSelectedReasons([]);\n      closeFeedbackModal();\n    } catch (error) {\n      toggleNotification({\n        type: 'danger',\n        message: t('chat.feedback.error', 'An error occurred while submitting your feedback'),\n      });\n    }\n  };\n\n  return (\n    <Modal.Root open onOpenChange={closeFeedbackModal}>\n      <Modal.Content>\n        <Modal.Header>\n          <Typography variant=\"omega\" fontWeight=\"bold\">\n            {t('chat.feedback.title', 'Give feedback')}\n          </Typography>\n        </Modal.Header>\n        <Modal.Body>\n          <Flex direction=\"column\" alignItems=\"start\" gap={6} width=\"100%\">\n            <Flex direction=\"column\" alignItems=\"start\" gap={2}>\n              <Typography variant=\"beta\" fontWeight=\"bold\">\n                {t('chat.feedback.title', 'Give feedback')}\n              </Typography>\n              <Typography variant=\"omega\">\n                {t(\n                  'chat.feedback.subtitle',\n                  'Provide additional feedback on this message. Select all that apply.'\n                )}\n              </Typography>\n            </Flex>\n            <Grid.Root width=\"100%\" gap={2}>\n              {feedbackReasons.map((reason) => (\n                <Grid.Item key={reason.id} col={6}>\n                  <FeedbackOption\n                    key={reason.id}\n                    id={reason.id}\n                    label={reason.label}\n                    selected={selectedReasons.includes(reason.id)}\n                    onClick={handleReasonSelect}\n                  />\n                </Grid.Item>\n              ))}\n            </Grid.Root>\n            <Flex direction=\"column\" gap={2} width=\"100%\" alignItems=\"start\">\n              <Typography variant=\"omega\">\n                {t('chat.feedback.comment.label', 'How can we improve? (optional)')}\n              </Typography>\n              <Box width=\"100%\">\n                <Textarea\n                  name=\"feedback\"\n                  placeholder={t('chat.feedback.placeholder', 'Your feedback...')}\n                  onChange={(e) => setFeedbackText(e.target.value)}\n                  value={feedbackText}\n                />\n              </Box>\n            </Flex>\n          </Flex>\n        </Modal.Body>\n        <Modal.Footer>\n          <Modal.Close>\n            <Button variant=\"tertiary\" onClick={closeFeedbackModal}>\n              {t('form.button.cancel', 'Cancel')}\n            </Button>\n          </Modal.Close>\n          <Button\n            onClick={handleSubmitFeedback}\n            loading={isPending}\n            disabled={selectedReasons.length === 0}\n          >\n            {t('form.button.submit', 'Submit')}\n          </Button>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n"],"names":["FeedbackModalContext","createContext","isFeedbackModalOpen","currentMessageId","openFeedbackModal","closeFeedbackModal","useFeedbackModal","useContext","FeedbackProvider","children","setIsFeedbackModalOpen","useState","setCurrentMessageId","messageId","_jsxs","Provider","value","_jsx","FeedbackModal","FeedbackOptionWrapper","styled","Flex","theme","colors","neutral100","primary100","primary200","FeedbackOption","id","label","selected","onClick","className","justifyContent","hasRadius","width","cursor","borderColor","padding","gap","Typography","variant","fontWeight","Checkbox","name","checked","onChange","feedbackText","setFeedbackText","selectedReasons","setSelectedReasons","t","useTranslations","toggleNotification","useNotification","downvoteMessage","isPending","useFeedback","feedbackReasons","handleReasonSelect","prevSelected","includes","filter","reasonId","handleSubmitFeedback","length","error","type","message","Modal","Root","open","onOpenChange","Content","Header","Body","direction","alignItems","Grid","map","reason","Item","col","Box","Textarea","placeholder","e","target","Footer","Close","Button","loading","disabled"],"mappings":"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"}