{"version":3,"file":"FloatingPanel.mjs","sources":["../../../../../admin/src/components/AIChat/components/FloatingPanel.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { Box, Flex, IconButton } from '@strapi/design-system';\nimport { Cross } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\nimport { ANIMATIONS } from './animations';\n\ntype PanelSize = 'sm' | 'md' | 'lg';\ntype PanelPosition = 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left';\n\ninterface PanelContextValue {\n  size: PanelSize;\n  position: PanelPosition;\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nconst PanelContext = createContext<PanelContextValue>({\n  size: 'md',\n  position: 'bottom-right',\n  isOpen: false,\n  onToggle: () => {},\n});\n\nconst PANEL_SIZES: Record<PanelSize, { width: string; height: string }> = {\n  sm: { width: '350px', height: '500px' },\n  md: { width: '480px', height: '600px' },\n  lg: { width: '600px', height: '700px' },\n};\n\nconst PANEL_POSITIONS: Record<PanelPosition, { [key: string]: number }> = {\n  'bottom-right': { bottom: 4, right: 4 },\n  'bottom-left': { bottom: 4, left: 4 },\n  'top-right': { top: 4, right: 4 },\n  'top-left': { top: 4, left: 4 },\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Panel Root\n * -----------------------------------------------------------------------------------------------*/\ninterface RootProps {\n  children: React.ReactNode;\n  size?: PanelSize;\n  position?: PanelPosition;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  toggleIcon?: React.ReactNode;\n}\n\nconst FixedWrapper = styled(Box)<{ $position: PanelPosition }>`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  z-index: 11;\n  align-items: ${({ $position }) => ($position.includes('right') ? 'flex-end' : 'flex-start')};\n  ${({ $position, theme }) =>\n    Object.entries(PANEL_POSITIONS[$position]).reduce(\n      (acc, [key, value]) => ({\n        ...acc,\n        [key]: theme.spaces[value],\n      }),\n      {}\n    )}\n`;\n\nconst PanelContainer = styled(Box)<{ $size: PanelSize; $position: PanelPosition }>`\n  width: ${({ $size }) => PANEL_SIZES[$size].width};\n  max-height: 85vh;\n  max-width: 85vw;\n  display: flex;\n  flex-direction: column;\n  height: ${({ $size }) => PANEL_SIZES[$size].height};\n\n  @media (prefers-reduced-motion: no-preference) {\n    animation-duration: 200ms;\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n    &[data-state='open'] {\n      animation-name: ${({ $position }) =>\n        $position.startsWith('top') ? ANIMATIONS.slideDownIn : ANIMATIONS.slideUpIn};\n    }\n\n    &[data-state='closed'] {\n      animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n      animation-name: ${({ $position }) =>\n        $position.startsWith('top') ? ANIMATIONS.slideDownOut : ANIMATIONS.slideUpOut};\n    }\n  }\n`;\n\nconst Root = ({\n  children,\n  size = 'md',\n  position = 'bottom-right',\n  isOpen = false,\n  onToggle = () => {},\n  toggleIcon,\n}: RootProps) => {\n  return (\n    <PanelContext.Provider value={{ size, position, isOpen, onToggle }}>\n      <FixedWrapper $position={position}>\n        {isOpen ? (\n          <PanelContainer\n            $size={size}\n            $position={position}\n            background=\"neutral0\"\n            shadow=\"popupShadow\"\n            hasRadius\n            borderColor=\"neutral200\"\n            borderStyle=\"solid\"\n            borderWidth=\"1px\"\n            data-state={isOpen ? 'open' : 'closed'}\n          >\n            {children}\n          </PanelContainer>\n        ) : null}\n        {toggleIcon && !isOpen && toggleIcon}\n      </FixedWrapper>\n    </PanelContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\nconst Header = ({ children }: { children: React.ReactNode }) => (\n  // Adjust padding to fit title and right icons\n  <Box padding={[2, 2, 2, 4]} borderColor=\"neutral150\" borderStyle=\"solid\" borderWidth=\"0 0 1px 0\">\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      {children}\n    </Flex>\n  </Box>\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Body\n * -----------------------------------------------------------------------------------------------*/\nconst Body = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <Box padding={4} flex=\"1\" overflow=\"auto\">\n      {children}\n    </Box>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Footer\n * -----------------------------------------------------------------------------------------------*/\nconst Footer = ({ children }: { children: React.ReactNode }) => <Box padding={4}>{children}</Box>;\n\n/* -------------------------------------------------------------------------------------------------\n * Close Panel\n * -----------------------------------------------------------------------------------------------*/\nconst Close = ({ label }: { label?: string }) => {\n  const { onToggle } = usePanel();\n\n  return (\n    <IconButton onClick={onToggle} variant=\"ghost\" label={label || 'Close'}>\n      <Cross />\n    </IconButton>\n  );\n};\n\nexport const Panel = {\n  Root,\n  Header,\n  Body,\n  Footer,\n  Close,\n};\n\nexport const usePanel = () => useContext(PanelContext);\n"],"names":["PanelContext","createContext","size","position","isOpen","onToggle","PANEL_SIZES","sm","width","height","md","lg","PANEL_POSITIONS","bottom","right","left","top","FixedWrapper","styled","Box","$position","includes","theme","Object","entries","reduce","acc","key","value","spaces","PanelContainer","$size","startsWith","ANIMATIONS","slideDownIn","slideUpIn","slideDownOut","slideUpOut","Root","children","toggleIcon","_jsx","Provider","_jsxs","background","shadow","hasRadius","borderColor","borderStyle","borderWidth","data-state","Header","padding","Flex","justifyContent","alignItems","Body","flex","overflow","Footer","Close","label","usePanel","IconButton","onClick","variant","Cross","Panel","useContext"],"mappings":"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"}