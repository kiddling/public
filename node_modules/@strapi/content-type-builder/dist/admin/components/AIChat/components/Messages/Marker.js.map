{"version":3,"file":"Marker.js","sources":["../../../../../../admin/src/components/AIChat/components/Messages/Marker.tsx"],"sourcesContent":["import { Typography, Flex, Box, Link } from '@strapi/design-system';\nimport { Check, Loader, Cross, ChevronDown } from '@strapi/icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { styled, keyframes } from 'styled-components';\n\nimport { MarkerContent } from '../../lib/types/messages';\nimport { Collapsible, CollapsibleTrigger, CollapsibleContent } from '../Collapsible';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SpinningLoader = styled(Loader)`\n  animation: ${rotate} 1s linear infinite;\n`;\n\nconst RotatingIcon = styled(Box)<{ $open: boolean }>`\n  transform: rotate(${({ $open }) => ($open ? '180deg' : '0deg')});\n  transition: transform ${({ theme }) => theme.motion.timings['200']}\n    ${({ theme }) => theme.motion.easings.easeOutQuad};\n`;\n\nconst Status = ({ status }: { status: string }) => {\n  switch (status) {\n    case 'update':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"warning500\">\n          M\n        </Typography>\n      );\n    case 'remove':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"danger500\">\n          D\n        </Typography>\n      );\n    case 'create':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"success500\">\n          N\n        </Typography>\n      );\n    default:\n      return null;\n  }\n};\n\nexport const Marker = ({ title, steps, state }: MarkerContent) => {\n  const getStateIcon = () => {\n    switch (state) {\n      case 'success':\n        return <Check fill=\"success500\" />;\n      case 'loading':\n        return <SpinningLoader />;\n      case 'error':\n        return <Cross fill=\"danger500\" />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box\n      borderWidth=\"1px\"\n      borderColor=\"neutral200\"\n      borderStyle=\"solid\"\n      hasRadius\n      marginBottom={3}\n      width={'336px'}\n    >\n      <Collapsible defaultOpen={false}>\n        <CollapsibleTrigger>\n          {({ open }) => (\n            <Box\n              padding={3}\n              borderColor=\"neutral200\"\n              borderWidth={open ? '0 0 1px 0' : '0'}\n              borderStyle=\"solid\"\n            >\n              <Flex gap={2} alignItems=\"center\">\n                {getStateIcon()}\n                <Typography>{title}</Typography>\n                <Flex marginLeft=\"auto\">\n                  <RotatingIcon as={ChevronDown} $open={open} />\n                </Flex>\n              </Flex>\n            </Box>\n          )}\n        </CollapsibleTrigger>\n        <CollapsibleContent>\n          <Flex gap={3} padding={3} direction=\"column\">\n            {steps.map((step) => (\n              <Flex\n                key={step.id}\n                gap={2}\n                justifyContent=\"space-between\"\n                width=\"100%\"\n                padding={[0, 1]}\n              >\n                {/* <Typography>{step.description}</Typography> */}\n                {step.link ? (\n                  <Link tag={RouterLink} to={step.link}>\n                    <Typography>{step.description}</Typography>\n                  </Link>\n                ) : (\n                  <Typography>{step.description}</Typography>\n                )}\n                <Status status={step.status} />\n              </Flex>\n            ))}\n          </Flex>\n        </CollapsibleContent>\n      </Collapsible>\n    </Box>\n  );\n};\n"],"names":["rotate","keyframes","SpinningLoader","styled","Loader","RotatingIcon","Box","$open","theme","motion","timings","easings","easeOutQuad","Status","status","_jsx","Typography","fontWeight","textColor","Marker","title","steps","state","getStateIcon","Check","fill","Cross","borderWidth","borderColor","borderStyle","hasRadius","marginBottom","width","_jsxs","Collapsible","defaultOpen","CollapsibleTrigger","open","padding","Flex","gap","alignItems","marginLeft","as","ChevronDown","CollapsibleContent","direction","map","step","justifyContent","link","Link","tag","RouterLink","to","description","id"],"mappings":"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"}