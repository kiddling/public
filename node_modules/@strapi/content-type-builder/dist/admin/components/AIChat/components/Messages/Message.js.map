{"version":3,"file":"Message.js","sources":["../../../../../../admin/src/components/AIChat/components/Messages/Message.tsx"],"sourcesContent":["import { Typography, Box, IconButton, Flex } from '@strapi/design-system';\nimport { ThumbUp, ThumbDown } from '@strapi/icons';\nimport Markdown from 'react-markdown';\nimport { styled } from 'styled-components';\n\nimport { useFeedbackModal } from '../../FeedbackModal';\nimport { useFeedback } from '../../hooks/useFeedback';\nimport {\n  AIMessage,\n  type UserMessage as UserMessageType,\n  AssistantMessage as AssistantMessageType,\n  type MarkerContent as MarkerContentType,\n} from '../../lib/types/messages';\nimport { AnimatedBox } from '../AnimatedBox';\nimport { AttachmentPreview } from '../Attachments/AttachmentPreview';\n\nimport { Marker } from './Marker';\n\nconst MarkdownStyles = styled(Typography)`\n  max-width: 65ch;\n  margin: 0 auto;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 1.25em;\n    margin-bottom: 0.5em;\n    font-weight: bold;\n  }\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  ul,\n  ol {\n    padding-left: 1.5em; /* indentation for bullet points */\n    margin-bottom: 1em;\n  }\n\n  li {\n    margin-bottom: 0.5em;\n    list-style-type: disc; /* or whatever style you prefer */\n  }\n\n  strong {\n    font-weight: bold;\n  }\n\n  /* code blocks, blockquotes, etc. */\n  code {\n    background-color: ${({ theme }) => theme.colors.neutral100};\n    padding: 0.2em 0.4em;\n    border-radius: ${({ theme }) => theme.borderRadius};\n    border-color: ${({ theme }) => theme.colors.neutral150};\n    border-style: solid;\n    font-family: 'SF Mono', SFMono-Regular, ui-monospace, 'DejaVu Sans Mono', Menlo, Consolas,\n      monospace;\n  }\n\n  /* links */\n  a {\n    color: ${({ theme }) => theme.colors.primary500};\n    background-color: ${({ theme }) => theme.colors.neutral100};\n    padding: 0.2em 0.4em;\n    border-radius: ${({ theme }) => theme.borderRadius};\n    border-color: ${({ theme }) => theme.colors.neutral150};\n    border-style: solid;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n// ---------------------------\n// Tool: schemaGenerationTool helpers\n// ---------------------------\n\ntype SchemaToolSchema = {\n  action?: 'create' | 'update' | 'remove';\n  uid?: string;\n  name?: string;\n  category?: string;\n  kind?: 'collectionType' | 'singleType' | 'component';\n  modelType?: 'component' | 'collectionType' | 'singleType';\n};\n\ntype SchemaToolPart = {\n  type: 'tool-schemaGenerationTool';\n  input?: { schemas?: SchemaToolSchema[] };\n  output?: { schemas?: SchemaToolSchema[]; error?: unknown };\n  toolCallId?: string;\n};\n\nconst isSchemaToolPart = (part: any): part is SchemaToolPart =>\n  part && typeof part === 'object' && part.type === 'tool-schemaGenerationTool';\n\nconst capitalize = (s?: string) => (s ? s.charAt(0).toUpperCase() + s.slice(1) : '');\n\nconst getSchemaLink = (schema: SchemaToolSchema): string | undefined => {\n  const isComponent = (schema.kind ?? schema.modelType) === 'component';\n  if (!schema.uid) return undefined;\n  return isComponent\n    ? `/plugins/content-type-builder/component-categories/${schema.category ?? ''}/${schema.uid}`\n    : `/plugins/content-type-builder/content-types/${schema.uid}`;\n};\n\nconst toMarkerFromSchemaTool = (part: SchemaToolPart): MarkerContentType => {\n  const outSchemas = part.output?.schemas ?? [];\n  const inSchemas = part.input?.schemas ?? [];\n\n  const schemas = (outSchemas.length ? outSchemas : inSchemas) as SchemaToolSchema[];\n  const numSchemas = schemas.length;\n\n  const state: 'loading' | 'success' | 'error' = part.output\n    ? part.output.error\n      ? 'error'\n      : 'success'\n    : 'loading';\n\n  const steps = schemas.map((schema, index) => ({\n    id: `${part.toolCallId ?? 'schemaGenerationTool'}-${schema.uid ?? schema.name ?? index}`,\n    description: capitalize(schema.name ?? schema.uid ?? 'Schema'),\n    status:\n      schema.action === 'create' || schema.action === 'update' || schema.action === 'remove'\n        ? schema.action\n        : ('update' as const),\n    link: getSchemaLink(schema),\n  }));\n\n  const title =\n    state === 'success'\n      ? `Updated ${numSchemas} schema${numSchemas === 1 ? '' : 's'}`\n      : state === 'error'\n        ? `Failed to update schema${numSchemas === 1 ? '' : 's'}`\n        : 'Updating schemas';\n\n  return {\n    type: 'marker',\n    title,\n    state,\n    steps,\n  };\n};\n\nconst MessageContent = ({\n  part,\n}: {\n  part: AIMessage['parts'][number];\n  status?: 'loading' | 'success' | 'error';\n}) => {\n  if (part.type === 'text') {\n    return (\n      <MarkdownStyles>\n        <Markdown\n          components={{\n            a: ({ node, ...props }) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />,\n          }}\n        >\n          {part.text}\n        </Markdown>\n      </MarkdownStyles>\n    );\n  }\n\n  if (isSchemaToolPart(part)) {\n    const marker = toMarkerFromSchemaTool(part);\n    return <Marker {...marker} />;\n  }\n\n  return null;\n};\n\nconst UserMessage = ({ message }: { message: UserMessageType }) => {\n  const hasText = message.parts.some(\n    (content) => content.type === 'text' && content.text.trim() !== ''\n  );\n  const attachments = message.parts.filter((content) => content.type === 'file');\n\n  return (\n    <AnimatedBox\n      as={Flex}\n      direction=\"column\"\n      alignItems=\"flex-end\"\n      style={{ alignSelf: 'flex-end' }}\n      gap={2}\n      maxWidth=\"80%\"\n    >\n      {hasText ? (\n        <Box background=\"neutral150\" borderStyle=\"none\" padding={['10px', '16px']} hasRadius>\n          {message.parts.map((content, index) => {\n            if (content.type !== 'text') return null;\n            return <Typography key={index}>{content.text}</Typography>;\n          })}\n        </Box>\n      ) : null}\n\n      {/* Attachments */}\n      {attachments.map((attachment, idx) => (\n        <AttachmentPreview\n          key={`${attachment.type === 'file' ? attachment.filename : attachment.type}-${idx}`}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          attachment={{ ...attachment, status: 'ready' } as any}\n        />\n      ))}\n    </AnimatedBox>\n  );\n};\n\nconst AssistantMessage = ({\n  message,\n  isLoading,\n}: {\n  message: AssistantMessageType;\n  isLoading?: boolean;\n}) => {\n  const { upvoteMessage } = useFeedback();\n  const { openFeedbackModal } = useFeedbackModal();\n\n  return (\n    <Box style={{ alignSelf: 'flex-start' }} maxWidth=\"90%\">\n      {message.parts.map((content, index) => (\n        <MessageContent key={index} part={content} />\n      ))}\n      {isLoading ? (\n        <Flex gap={1}>\n          <IconButton\n            label=\"Upvote\"\n            size=\"XS\"\n            variant=\"ghost\"\n            onClick={() => upvoteMessage(message.id)}\n          >\n            <ThumbUp />\n          </IconButton>\n          <IconButton\n            label=\"Downvote\"\n            size=\"XS\"\n            variant=\"ghost\"\n            // For downvoting, user must provide specific feedback\n            onClick={() => openFeedbackModal(message.id)}\n          >\n            <ThumbDown />\n          </IconButton>\n        </Flex>\n      ) : null}\n    </Box>\n  );\n};\n\nexport const ChatMessage = ({\n  message,\n  isLoading,\n}: {\n  message: AIMessage;\n  isLoading?: boolean;\n}) => {\n  /**\n   * IMPORTANT: Messages are rendered using react-markdown (heavy compute)\n   * Component re-renders on each message update, but AI SDK v5 provides\n   * throttling (experimental_throttle: 100ms) which batches updates and reduces\n   * re-render frequency during streaming.\n   */\n  if (message.role === 'user') {\n    return <UserMessage message={message as UserMessageType} />;\n  }\n  return <AssistantMessage message={message as AssistantMessageType} />;\n};\n"],"names":["MarkdownStyles","styled","Typography","theme","colors","neutral100","borderRadius","neutral150","primary500","isSchemaToolPart","part","type","capitalize","s","charAt","toUpperCase","slice","getSchemaLink","schema","isComponent","kind","modelType","uid","undefined","category","toMarkerFromSchemaTool","outSchemas","output","schemas","inSchemas","input","length","numSchemas","state","error","steps","map","index","id","toolCallId","name","description","status","action","link","title","MessageContent","_jsx","Markdown","components","a","node","props","target","rel","text","marker","Marker","UserMessage","message","hasText","parts","some","content","trim","attachments","filter","_jsxs","AnimatedBox","as","Flex","direction","alignItems","style","alignSelf","gap","maxWidth","Box","background","borderStyle","padding","hasRadius","attachment","idx","AttachmentPreview","filename","AssistantMessage","isLoading","upvoteMessage","useFeedback","openFeedbackModal","useFeedbackModal","IconButton","label","size","variant","onClick","ThumbUp","ThumbDown","ChatMessage","role"],"mappings":"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"}