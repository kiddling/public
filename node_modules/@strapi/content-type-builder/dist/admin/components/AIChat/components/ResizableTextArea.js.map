{"version":3,"file":"ResizableTextArea.js","sources":["../../../../../admin/src/components/AIChat/components/ResizableTextArea.tsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\n\nimport { Box } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\ninterface TextAreaProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onSubmit?: (e: React.FormEvent<HTMLFormElement>) => void;\n  placeholder?: string;\n}\n\nconst TextAreaElement = styled(Box).attrs({ as: 'textarea' })`\n  border: none;\n  resize: none;\n  background: transparent;\n  outline: none !important;\n  width: 100%;\n  min-height: 44px;\n  max-height: 160px;\n  line-height: ${({ theme }) => theme.lineHeights[4]};\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  color: ${({ theme }) => theme.colors.neutral800};\n  padding-bottom: ${({ theme }) => theme.spaces[1]};\n  overflow-y: auto;\n\n  /* Show partial lines when content exceeds visible area */\n  height: ${({ rows, theme }) =>\n    rows === 5\n      ? `calc(${rows} * ${theme.lineHeights[4]} * 1em + 0.7em)`\n      : `calc(${rows} * ${theme.lineHeights[4]} * 1em)`};\n\n  &:disabled,\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.neutral600};\n  }\n`;\n\nexport const ResizableTextArea = ({ value, onChange, onSubmit, placeholder }: TextAreaProps) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [rows, setRows] = useState(1);\n\n  const calculateRows = (text: string) => {\n    if (!text) return 1;\n    // Count newlines in the text\n    const lineCount = (text.match(/\\n/g) || []).length + 1;\n    // Limit to a maximum of 5 rows\n    return Math.min(lineCount, 5);\n  };\n\n  // Update rows when value changes\n  useEffect(() => {\n    setRows(calculateRows(value));\n  }, [value]);\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (!textareaRef.current?.value.trim()) {\n      return;\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && onSubmit) {\n      e.preventDefault();\n      onSubmit(e as unknown as React.FormEvent<HTMLFormElement>);\n      // Ensure focus is maintained after submission using a small delay\n      // This helps ensure the focus happens after any other effects from submission\n      setTimeout(() => {\n        textareaRef.current?.focus();\n      }, 10);\n    }\n  };\n\n  useEffect(() => {\n    textareaRef.current?.focus();\n  }, [textareaRef]);\n\n  return (\n    <TextAreaElement\n      ref={textareaRef}\n      value={value}\n      onChange={onChange}\n      onKeyDown={handleKeyDown}\n      placeholder={placeholder}\n      rows={rows}\n    />\n  );\n};\n"],"names":["TextAreaElement","styled","Box","attrs","as","theme","lineHeights","fontSizes","colors","neutral800","spaces","rows","neutral600","ResizableTextArea","value","onChange","onSubmit","placeholder","textareaRef","useRef","setRows","useState","calculateRows","text","lineCount","match","length","Math","min","useEffect","handleKeyDown","e","current","trim","key","shiftKey","preventDefault","setTimeout","focus","_jsx","ref","onKeyDown"],"mappings":";;;;;;;AAYA,MAAMA,eAAkBC,GAAAA,uBAAAA,CAAOC,gBAAKC,CAAAA,CAAAA,KAAK,CAAC;IAAEC,EAAI,EAAA;AAAW,CAAA,CAAE;;;;;;;;eAQ9C,EAAE,CAAC,EAAEC,KAAK,EAAE,GAAKA,KAAMC,CAAAA,WAAW,CAAC,CAAA,CAAE,CAAC;aACxC,EAAE,CAAC,EAAED,KAAK,EAAE,GAAKA,KAAME,CAAAA,SAAS,CAAC,CAAA,CAAE,CAAC;SACxC,EAAE,CAAC,EAAEF,KAAK,EAAE,GAAKA,KAAMG,CAAAA,MAAM,CAACC,UAAU,CAAC;kBAChC,EAAE,CAAC,EAAEJ,KAAK,EAAE,GAAKA,KAAMK,CAAAA,MAAM,CAAC,CAAA,CAAE,CAAC;;;;AAIzC,UAAA,EAAE,CAAC,EAAEC,IAAI,EAAEN,KAAK,EAAE,GACxBM,IAAAA,KAAS,CACL,GAAA,CAAC,KAAK,EAAEA,IAAAA,CAAK,GAAG,EAAEN,MAAMC,WAAW,CAAC,CAAE,CAAA,CAAC,eAAe,CAAC,GACvD,CAAC,KAAK,EAAEK,IAAK,CAAA,GAAG,EAAEN,KAAAA,CAAMC,WAAW,CAAC,CAAA,CAAE,CAAC,OAAO,CAAC,CAAC;;;;WAI7C,EAAE,CAAC,EAAED,KAAK,EAAE,GAAKA,KAAMG,CAAAA,MAAM,CAACI,UAAU,CAAC;;AAEpD,CAAC;AAEM,MAAMC,iBAAoB,GAAA,CAAC,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAiB,GAAA;AACzF,IAAA,MAAMC,cAAcC,YAA4B,CAAA,IAAA,CAAA;AAChD,IAAA,MAAM,CAACR,IAAAA,EAAMS,OAAQ,CAAA,GAAGC,cAAS,CAAA,CAAA,CAAA;AAEjC,IAAA,MAAMC,gBAAgB,CAACC,IAAAA,GAAAA;QACrB,IAAI,CAACA,MAAM,OAAO,CAAA;;QAElB,MAAMC,SAAAA,GAAY,CAACD,IAAKE,CAAAA,KAAK,CAAC,KAAA,CAAA,IAAU,EAAC,EAAGC,MAAM,GAAG,CAAA;;QAErD,OAAOC,IAAAA,CAAKC,GAAG,CAACJ,SAAW,EAAA,CAAA,CAAA;AAC7B,KAAA;;IAGAK,eAAU,CAAA,IAAA;AACRT,QAAAA,OAAAA,CAAQE,aAAcR,CAAAA,KAAAA,CAAAA,CAAAA;KACrB,EAAA;AAACA,QAAAA;AAAM,KAAA,CAAA;AAEV,IAAA,MAAMgB,gBAAgB,CAACC,CAAAA,GAAAA;AACrB,QAAA,IAAI,CAACb,WAAAA,CAAYc,OAAO,EAAElB,MAAMmB,IAAQ,EAAA,EAAA;AACtC,YAAA;AACF;QAEA,IAAIF,CAAAA,CAAEG,GAAG,KAAK,OAAA,IAAW,CAACH,CAAEI,CAAAA,QAAQ,IAAInB,QAAU,EAAA;AAChDe,YAAAA,CAAAA,CAAEK,cAAc,EAAA;YAChBpB,QAASe,CAAAA,CAAAA,CAAAA;;;YAGTM,UAAW,CAAA,IAAA;AACTnB,gBAAAA,WAAAA,CAAYc,OAAO,EAAEM,KAAAA,EAAAA;aACpB,EAAA,EAAA,CAAA;AACL;AACF,KAAA;IAEAT,eAAU,CAAA,IAAA;AACRX,QAAAA,WAAAA,CAAYc,OAAO,EAAEM,KAAAA,EAAAA;KACpB,EAAA;AAACpB,QAAAA;AAAY,KAAA,CAAA;AAEhB,IAAA,qBACEqB,cAACvC,CAAAA,eAAAA,EAAAA;QACCwC,GAAKtB,EAAAA,WAAAA;QACLJ,KAAOA,EAAAA,KAAAA;QACPC,QAAUA,EAAAA,QAAAA;QACV0B,SAAWX,EAAAA,aAAAA;QACXb,WAAaA,EAAAA,WAAAA;QACbN,IAAMA,EAAAA;;AAGZ;;;;"}