{"version":3,"file":"index.mjs","sources":["../../../../admin/src/pages/App/index.tsx"],"sourcesContent":["/* eslint-disable import/no-default-export */\n/* eslint-disable check-file/filename-naming-convention  */\n/* eslint-disable check-file/no-index */\nimport { lazy, Suspense, useEffect } from 'react';\n\nimport {\n  Page,\n  Layouts,\n  useAppInfo,\n  useGuidedTour,\n  useAIAvailability,\n} from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { Chat } from '../../components/AIChat/Chat';\nimport { prefetchAIToken } from '../../components/AIChat/lib/aiClient';\nimport { ChatProvider } from '../../components/AIChat/providers/ChatProvider';\nimport { AutoReloadOverlayBlockerProvider } from '../../components/AutoReloadOverlayBlocker';\nimport { ContentTypeBuilderNav } from '../../components/ContentTypeBuilderNav/ContentTypeBuilderNav';\nimport DataManagerProvider from '../../components/DataManager/DataManagerProvider';\nimport { ExitPrompt } from '../../components/ExitPrompt';\nimport { FormModal } from '../../components/FormModal/FormModal';\nimport { FormModalNavigationProvider } from '../../components/FormModalNavigation/FormModalNavigationProvider';\nimport { PERMISSIONS } from '../../constants';\nimport { pluginId } from '../../pluginId';\nimport { EmptyState } from '../ListView/EmptyState';\n\nconst ListView = lazy(() => import('../ListView/ListView'));\n\nconst App = () => {\n  const { formatMessage } = useIntl();\n  const title = formatMessage({\n    id: `${pluginId}.plugin.name`,\n    defaultMessage: 'Content Types Builder',\n  });\n\n  const autoReload = useAppInfo('DataManagerProvider', (state) => state.autoReload);\n  const isAIEnabled = useAIAvailability();\n  const state = useGuidedTour('ContentTypeBuilderApp', (s) => s.state);\n  const dispatch = useGuidedTour('ContentTypeBuilderApp', (s) => s.dispatch);\n\n  // Prefetch AI token on initial load\n  useEffect(() => {\n    prefetchAIToken();\n  }, []);\n\n  // Set tour type based on AI availability when the app loads\n  useEffect(() => {\n    const tourType = isAIEnabled ? 'ContentTypeBuilderAI' : 'ContentTypeBuilderNoAI';\n    const currentTourType = state.tours.contentTypeBuilder.tourType;\n\n    if (currentTourType !== tourType) {\n      dispatch({\n        type: 'set_tour_type',\n        payload: { tourName: 'contentTypeBuilder', tourType },\n      });\n    }\n  }, [isAIEnabled, state.tours.contentTypeBuilder.tourType, dispatch]);\n\n  return (\n    <Page.Protect permissions={PERMISSIONS.main}>\n      <Page.Title>{title}</Page.Title>\n      <AutoReloadOverlayBlockerProvider>\n        <FormModalNavigationProvider>\n          <DataManagerProvider>\n            <ExitPrompt />\n            <ChatProvider>\n              <>\n                {autoReload && <FormModal />}\n                <Layouts.Root sideNav={<ContentTypeBuilderNav />}>\n                  <Suspense fallback={<Page.Loading />}>\n                    <Routes>\n                      <Route path=\"content-types/create-content-type\" element={<EmptyState />} />\n                      <Route path=\"content-types/:contentTypeUid\" element={<ListView />} />\n                      <Route\n                        path={`component-categories/:categoryUid/:componentUid`}\n                        element={<ListView />}\n                      />\n                      <Route path=\"*\" element={<ListView />} />\n                    </Routes>\n                  </Suspense>\n                </Layouts.Root>\n                <Chat />\n              </>\n            </ChatProvider>\n          </DataManagerProvider>\n        </FormModalNavigationProvider>\n      </AutoReloadOverlayBlockerProvider>\n    </Page.Protect>\n  );\n};\n\nexport default App;\n"],"names":["ListView","lazy","App","formatMessage","useIntl","title","id","pluginId","defaultMessage","autoReload","useAppInfo","state","isAIEnabled","useAIAvailability","useGuidedTour","s","dispatch","useEffect","prefetchAIToken","tourType","currentTourType","tours","contentTypeBuilder","type","payload","tourName","_jsxs","Page","Protect","permissions","PERMISSIONS","main","_jsx","Title","AutoReloadOverlayBlockerProvider","FormModalNavigationProvider","DataManagerProvider","ExitPrompt","ChatProvider","_Fragment","FormModal","Layouts","Root","sideNav","ContentTypeBuilderNav","Suspense","fallback","Loading","Routes","Route","path","element","EmptyState","Chat"],"mappings":"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"}