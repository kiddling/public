{"version":3,"file":"useUpload.mjs","sources":["../../../admin/src/hooks/useUpload.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useFetchClient, FetchClient, adminApi } from '@strapi/admin/strapi-admin';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useDispatch } from 'react-redux';\n\nimport { File, RawFile, CreateFile } from '../../../shared/contracts/files';\nimport { pluginId } from '../pluginId';\n\nconst endpoint = `/${pluginId}`;\n\ninterface Asset extends Omit<File, 'id' | 'hash'> {\n  rawFile?: RawFile;\n  id?: File['id'];\n  hash?: File['hash'];\n}\n\nconst uploadAssets = (\n  assets: Asset | Asset[],\n  folderId: number | null,\n  signal: AbortSignal,\n  onProgress: (progress: number) => void,\n  post: FetchClient['post']\n) => {\n  const assetsArray = Array.isArray(assets) ? assets : [assets];\n  const formData = new FormData();\n\n  // Add all files to the form data\n  assetsArray.forEach((asset) => {\n    if (asset.rawFile) {\n      formData.append('files', asset.rawFile);\n    }\n  });\n\n  // Add each fileInfo as a separate stringified field\n  assetsArray.forEach((asset) => {\n    formData.append(\n      'fileInfo',\n      JSON.stringify({\n        name: asset.name,\n        caption: asset.caption,\n        alternativeText: asset.alternativeText,\n        folder: folderId,\n      })\n    );\n  });\n\n  /**\n   * onProgress is not possible using native fetch\n   * need to look into an alternative to make it work\n   * perhaps using xhr like Axios does\n   */\n  return post(endpoint, formData, {\n    signal,\n  }).then((res) => res.data);\n};\n\nexport const useUpload = () => {\n  const dispatch = useDispatch();\n  const [progress, setProgress] = React.useState(0);\n  const queryClient = useQueryClient();\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  const { post } = useFetchClient();\n\n  const mutation = useMutation<\n    CreateFile.Response['data'],\n    CreateFile.Response['error'],\n    { assets: Asset | Asset[]; folderId: number | null }\n  >(\n    ({ assets, folderId }) => {\n      return uploadAssets(assets, folderId, signal, setProgress, post);\n    },\n    {\n      onSuccess() {\n        queryClient.refetchQueries([pluginId, 'assets'], { active: true });\n        queryClient.refetchQueries([pluginId, 'asset-count'], { active: true });\n        dispatch(adminApi.util.invalidateTags(['HomepageKeyStatistics', 'AIUsage']));\n      },\n    }\n  );\n\n  const upload = (assets: Asset | Asset[], folderId: number | null) =>\n    mutation.mutateAsync({ assets, folderId });\n\n  const cancel = () => abortController.abort();\n\n  return {\n    upload,\n    isLoading: mutation.isLoading,\n    cancel,\n    error: mutation.error,\n    progress,\n    status: mutation.status,\n  };\n};\n"],"names":["endpoint","pluginId","uploadAssets","assets","folderId","signal","onProgress","post","assetsArray","Array","isArray","formData","FormData","forEach","asset","rawFile","append","JSON","stringify","name","caption","alternativeText","folder","then","res","data","useUpload","dispatch","useDispatch","progress","setProgress","React","useState","queryClient","useQueryClient","abortController","AbortController","useFetchClient","mutation","useMutation","onSuccess","refetchQueries","active","adminApi","util","invalidateTags","upload","mutateAsync","cancel","abort","isLoading","error","status"],"mappings":"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"}