{"version":3,"file":"EditAssetContent.mjs","sources":["../../../../admin/src/components/EditAssetDialog/EditAssetContent.tsx"],"sourcesContent":["/**\n *\n * EditAssetDialog\n *\n */\nimport * as React from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\nimport {\n  Button,\n  Field,\n  Flex,\n  Grid,\n  Loader,\n  Modal,\n  TextInput,\n  VisuallyHidden,\n} from '@strapi/design-system';\nimport { Form, Formik } from 'formik';\nimport isEqual from 'lodash/isEqual';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\nimport * as yup from 'yup';\n\nimport { useEditAsset } from '../../hooks/useEditAsset';\nimport { useFolderStructure } from '../../hooks/useFolderStructure';\nimport { findRecursiveFolderByValue, getTrad, getFileExtension, formatBytes } from '../../utils';\nimport { ContextInfo } from '../ContextInfo/ContextInfo';\nimport { SelectTree } from '../SelectTree/SelectTree';\n\nimport { DialogHeader } from './DialogHeader';\nimport { PreviewBox } from './PreviewBox/PreviewBox';\nimport { ReplaceMediaButton } from './ReplaceMediaButton';\n\nimport type { File as FileDefinition, RawFile } from '../../../../shared/contracts/files';\n\nconst LoadingBody = styled(Flex)`\n  /* 80px are coming from the Tabs component that is not included in the ModalBody */\n  min-height: ${() => `calc(60dvh + 8rem)`};\n`;\n\nconst fileInfoSchema = yup.object({\n  name: yup.string().required(),\n  alternativeText: yup.string(),\n  caption: yup.string(),\n  folder: yup.number(),\n});\n\nexport interface Asset extends Omit<FileDefinition, 'folder'> {\n  isLocal?: boolean;\n  rawFile?: RawFile;\n  folder?: FileDefinition['folder'] & { id: number };\n}\n\ninterface EditAssetContentProps {\n  asset?: Asset;\n  canUpdate?: boolean;\n  canCopyLink?: boolean;\n  canDownload?: boolean;\n  trackedLocation?: string;\n  onClose: (arg?: Asset | null | boolean) => void;\n  omitFields?: ('caption' | 'alternativeText')[];\n  omitActions?: 'replace'[];\n}\n\ninterface FormInitialData {\n  name?: string;\n  alternativeText?: string;\n  caption?: string;\n  parent?: {\n    value?: number;\n    label: string;\n  };\n}\n\nexport const EditAssetContent = ({\n  onClose,\n  asset,\n  canUpdate = false,\n  canCopyLink = false,\n  canDownload = false,\n  trackedLocation,\n  omitFields = [],\n  omitActions = [],\n}: EditAssetContentProps) => {\n  const { formatMessage, formatDate } = useIntl();\n  const { trackUsage } = useTracking();\n  const submitButtonRef = React.useRef<HTMLButtonElement>(null);\n  const [isCropping, setIsCropping] = React.useState(false);\n  const [replacementFile, setReplacementFile] = React.useState<File | undefined>();\n  const { editAsset, isLoading } = useEditAsset();\n\n  const { data: folderStructure, isLoading: folderStructureIsLoading } = useFolderStructure({\n    enabled: true,\n  });\n\n  const handleSubmit = async (values: FormInitialData) => {\n    const nextAsset = { ...asset, ...values, folder: values.parent?.value } as Asset;\n\n    if (asset?.isLocal) {\n      onClose(nextAsset);\n    } else {\n      const editedAsset = (await editAsset(nextAsset, replacementFile!)) as Asset;\n\n      const assetType = asset?.mime?.split('/')[0];\n      // if the folder parent was the root of Media Library, its id is null\n      // we know it changed location if the new parent value exists\n      const didChangeLocation = asset?.folder?.id\n        ? asset.folder.id !== values.parent?.value\n        : asset?.folder === null && !!values.parent?.value;\n\n      trackUsage('didEditMediaLibraryElements', {\n        location: trackedLocation,\n        type: assetType,\n        changeLocation: didChangeLocation,\n      });\n\n      onClose(editedAsset);\n    }\n  };\n\n  const handleStartCropping = () => {\n    setIsCropping(true);\n  };\n\n  const handleCancelCropping = () => {\n    setIsCropping(false);\n  };\n\n  const handleFinishCropping = () => {\n    setIsCropping(false);\n    onClose();\n  };\n\n  const formDisabled = !canUpdate || isCropping;\n\n  const handleConfirmClose = () => {\n    // eslint-disable-next-line no-alert\n    const confirm = window.confirm(\n      formatMessage({\n        id: 'window.confirm.close-modal.file',\n        defaultMessage: 'Are you sure? Your changes will be lost.',\n      })\n    );\n\n    if (confirm) {\n      onClose();\n    }\n  };\n\n  const activeFolderId = asset?.folder?.id;\n  const initialFormData = !folderStructureIsLoading && {\n    name: asset?.name,\n    alternativeText: asset?.alternativeText ?? undefined,\n    caption: asset?.caption ?? undefined,\n    parent: {\n      value: activeFolderId ?? undefined,\n      label:\n        findRecursiveFolderByValue(folderStructure!, activeFolderId!)?.label ??\n        folderStructure![0].label,\n    },\n  };\n\n  const handleClose = (values?: { [key: string]: unknown }) => {\n    if (!isEqual(initialFormData, values)) {\n      handleConfirmClose();\n    } else {\n      onClose();\n    }\n  };\n\n  if (folderStructureIsLoading) {\n    return (\n      <>\n        <DialogHeader />\n        <LoadingBody minHeight=\"60vh\" justifyContent=\"center\" paddingTop={4} paddingBottom={4}>\n          <Loader>\n            {formatMessage({\n              id: getTrad('content.isLoading'),\n              defaultMessage: 'Content is loading.',\n            })}\n          </Loader>\n        </LoadingBody>\n        <Modal.Footer>\n          <Button onClick={() => handleClose()} variant=\"tertiary\">\n            {formatMessage({ id: 'cancel', defaultMessage: 'Cancel' })}\n          </Button>\n        </Modal.Footer>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      validationSchema={fileInfoSchema}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n      initialValues={initialFormData}\n    >\n      {({ values, errors, handleChange, setFieldValue }) => (\n        <>\n          <DialogHeader />\n          <Modal.Body>\n            <Grid.Root gap={4}>\n              <Grid.Item xs={12} col={6} direction=\"column\" alignItems=\"stretch\">\n                <PreviewBox\n                  asset={asset!}\n                  canUpdate={canUpdate}\n                  canCopyLink={canCopyLink}\n                  canDownload={canDownload}\n                  onDelete={onClose}\n                  onCropFinish={handleFinishCropping}\n                  onCropStart={handleStartCropping}\n                  onCropCancel={handleCancelCropping}\n                  replacementFile={replacementFile}\n                  trackedLocation={trackedLocation}\n                />\n              </Grid.Item>\n              <Grid.Item xs={12} col={6} direction=\"column\" alignItems=\"stretch\">\n                <Form noValidate>\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={3}>\n                    <ContextInfo\n                      blocks={[\n                        {\n                          label: formatMessage({\n                            id: getTrad('modal.file-details.size'),\n                            defaultMessage: 'Size',\n                          }),\n                          value: formatBytes(asset?.size ? asset.size : 0),\n                        },\n\n                        {\n                          label: formatMessage({\n                            id: getTrad('modal.file-details.dimensions'),\n                            defaultMessage: 'Dimensions',\n                          }),\n                          value:\n                            asset?.height && asset.width ? `${asset.width}✕${asset.height}` : null,\n                        },\n\n                        {\n                          label: formatMessage({\n                            id: getTrad('modal.file-details.date'),\n                            defaultMessage: 'Date',\n                          }),\n                          value: formatDate(new Date(asset?.createdAt ? asset.createdAt : '')),\n                        },\n\n                        {\n                          label: formatMessage({\n                            id: getTrad('modal.file-details.extension'),\n                            defaultMessage: 'Extension',\n                          }),\n                          value: getFileExtension(asset?.ext)!,\n                        },\n\n                        {\n                          label: formatMessage({\n                            id: getTrad('modal.file-details.id'),\n                            defaultMessage: 'Asset ID',\n                          }),\n                          value: asset?.id ? asset.id : null,\n                        },\n                      ]}\n                    />\n                    <Field.Root name=\"name\" error={errors.name}>\n                      <Field.Label>\n                        {formatMessage({\n                          id: getTrad('form.input.label.file-name'),\n                          defaultMessage: 'File name',\n                        })}\n                      </Field.Label>\n                      <TextInput\n                        value={values.name}\n                        onChange={handleChange}\n                        disabled={formDisabled}\n                      />\n                      <Field.Error />\n                    </Field.Root>\n\n                    {!omitFields?.includes('alternativeText') && (\n                      <Field.Root\n                        name=\"alternativeText\"\n                        hint={formatMessage({\n                          id: getTrad('form.input.description.file-alt'),\n                          defaultMessage:\n                            'This text will be displayed if the asset can’t be shown.',\n                        })}\n                        error={errors.alternativeText}\n                      >\n                        <Field.Label>\n                          {formatMessage({\n                            id: getTrad('form.input.label.file-alt'),\n                            defaultMessage: 'Alternative text',\n                          })}\n                        </Field.Label>\n                        <TextInput\n                          value={values.alternativeText}\n                          onChange={handleChange}\n                          disabled={formDisabled}\n                        />\n                        <Field.Hint />\n                        <Field.Error />\n                      </Field.Root>\n                    )}\n\n                    {!omitFields?.includes('caption') && (\n                      <Field.Root name=\"caption\" error={errors.caption}>\n                        <Field.Label>\n                          {formatMessage({\n                            id: getTrad('form.input.label.file-caption'),\n                            defaultMessage: 'Caption',\n                          })}\n                        </Field.Label>\n                        <TextInput\n                          value={values.caption}\n                          onChange={handleChange}\n                          disabled={formDisabled}\n                        />\n                      </Field.Root>\n                    )}\n\n                    <Flex direction=\"column\" alignItems=\"stretch\" gap={1}>\n                      <Field.Root name=\"parent\" id=\"asset-folder\">\n                        <Field.Label>\n                          {formatMessage({\n                            id: getTrad('form.input.label.file-location'),\n                            defaultMessage: 'Location',\n                          })}\n                        </Field.Label>\n\n                        <SelectTree\n                          name=\"parent\"\n                          defaultValue={values.parent}\n                          options={folderStructure!}\n                          onChange={(value) => {\n                            setFieldValue('parent', value);\n                          }}\n                          menuPortalTarget={document.querySelector('body')}\n                          inputId=\"asset-folder\"\n                          isDisabled={formDisabled}\n                          error={errors?.parent}\n                          ariaErrorMessage=\"folder-parent-error\"\n                        />\n                      </Field.Root>\n                    </Flex>\n                  </Flex>\n\n                  <VisuallyHidden>\n                    <button\n                      type=\"submit\"\n                      tabIndex={-1}\n                      ref={submitButtonRef}\n                      disabled={formDisabled}\n                    >\n                      {formatMessage({ id: 'submit', defaultMessage: 'Submit' })}\n                    </button>\n                  </VisuallyHidden>\n                </Form>\n              </Grid.Item>\n            </Grid.Root>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => handleClose({ ...values })} variant=\"tertiary\">\n              {formatMessage({ id: 'global.cancel', defaultMessage: 'Cancel' })}\n            </Button>\n            <Flex gap={2}>\n              {!omitActions?.includes('replace') && (\n                <ReplaceMediaButton\n                  onSelectMedia={setReplacementFile}\n                  acceptedMime={asset?.mime ?? ''}\n                  disabled={formDisabled}\n                  trackedLocation={trackedLocation}\n                />\n              )}\n\n              <Button\n                onClick={() => submitButtonRef.current?.click()}\n                loading={isLoading}\n                disabled={formDisabled}\n              >\n                {formatMessage({ id: 'global.finish', defaultMessage: 'Finish' })}\n              </Button>\n            </Flex>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n};\n\ninterface EditAssetDialogProps {\n  asset: Asset;\n  canUpdate?: boolean;\n  canCopyLink?: boolean;\n  canDownload?: boolean;\n  trackedLocation?: string;\n  open: boolean;\n  onClose: (arg?: Asset | null | boolean) => void;\n}\n\nexport const EditAssetDialog = ({\n  open,\n  onClose,\n  canUpdate = false,\n  canCopyLink = false,\n  canDownload = false,\n  ...restProps\n}: EditAssetDialogProps) => {\n  return (\n    <Modal.Root open={open} onOpenChange={onClose}>\n      <Modal.Content>\n        <EditAssetContent\n          onClose={onClose}\n          canUpdate={canUpdate}\n          canCopyLink={canCopyLink}\n          canDownload={canDownload}\n          {...restProps}\n        />\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n"],"names":["LoadingBody","styled","Flex","fileInfoSchema","yup","object","name","string","required","alternativeText","caption","folder","number","EditAssetContent","onClose","asset","canUpdate","canCopyLink","canDownload","trackedLocation","omitFields","omitActions","formatMessage","formatDate","useIntl","trackUsage","useTracking","submitButtonRef","React","useRef","isCropping","setIsCropping","useState","replacementFile","setReplacementFile","editAsset","isLoading","useEditAsset","data","folderStructure","folderStructureIsLoading","useFolderStructure","enabled","handleSubmit","values","nextAsset","parent","value","isLocal","editedAsset","assetType","mime","split","didChangeLocation","id","location","type","changeLocation","handleStartCropping","handleCancelCropping","handleFinishCropping","formDisabled","handleConfirmClose","confirm","window","defaultMessage","activeFolderId","initialFormData","undefined","label","findRecursiveFolderByValue","handleClose","isEqual","_jsxs","_Fragment","_jsx","DialogHeader","minHeight","justifyContent","paddingTop","paddingBottom","Loader","getTrad","Modal","Footer","Button","onClick","variant","Formik","validationSchema","validateOnChange","onSubmit","initialValues","errors","handleChange","setFieldValue","Body","Grid","Root","gap","Item","xs","col","direction","alignItems","PreviewBox","onDelete","onCropFinish","onCropStart","onCropCancel","Form","noValidate","ContextInfo","blocks","formatBytes","size","height","width","Date","createdAt","getFileExtension","ext","Field","error","Label","TextInput","onChange","disabled","Error","includes","hint","Hint","SelectTree","defaultValue","options","menuPortalTarget","document","querySelector","inputId","isDisabled","ariaErrorMessage","VisuallyHidden","button","tabIndex","ref","ReplaceMediaButton","onSelectMedia","acceptedMime","current","click","loading","EditAssetDialog","open","restProps","onOpenChange","Content"],"mappings":"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"}