{"version":3,"file":"PurchaseContentReleases.js","sources":["../../../admin/src/pages/PurchaseContentReleases.tsx"],"sourcesContent":["import { Layouts, RESPONSIVE_DEFAULT_SPACING } from '@strapi/admin/strapi-admin';\nimport { Box, Main, Flex, Typography, Grid, LinkButton } from '@strapi/design-system';\nimport { ExternalLink, Check, PaperPlane } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport darkIllustration from '../assets/purchase-page-illustration-dark.svg';\nimport lightIllustration from '../assets/purchase-page-illustration-light.svg';\nimport { useTypedSelector } from '../modules/hooks';\n\nconst PurchaseContentReleases = () => {\n  const { formatMessage } = useIntl();\n  const currentTheme = useTypedSelector((state) => state.admin_app.theme.currentTheme);\n\n  const illustration = currentTheme === 'light' ? lightIllustration : darkIllustration;\n  return (\n    <Layouts.Root>\n      <Main>\n        <Layouts.Header\n          title={formatMessage({\n            id: 'content-releases.pages.Releases.title',\n            defaultMessage: 'Releases',\n          })}\n        />\n        <Box\n          marginLeft={RESPONSIVE_DEFAULT_SPACING}\n          marginRight={RESPONSIVE_DEFAULT_SPACING}\n          shadow=\"filterShadow\"\n          hasRadius\n          background=\"neutral0\"\n          borderColor={'neutral150'}\n          overflow={'hidden'}\n        >\n          <Grid.Root>\n            <Grid.Item col={6} s={12} alignItems={'flex-start'}>\n              <Flex direction=\"column\" alignItems=\"flex-start\" padding={7} width={'100%'}>\n                <Flex>\n                  <PaperPlane fill=\"primary600\" width={`24px`} height={`24px`} />\n                </Flex>\n                <Flex paddingTop={3} paddingBottom={4}>\n                  <Typography variant=\"beta\" fontWeight=\"bold\">\n                    {formatMessage({\n                      id: 'pages.PurchaseRelease.description',\n                      defaultMessage: 'Group content and publish updates together',\n                    })}\n                  </Typography>\n                </Flex>\n\n                <Flex direction=\"column\" alignItems={'flex-start'} gap={2}>\n                  <Flex gap={2}>\n                    <Check\n                      fill=\"success500\"\n                      width={`16px`}\n                      height={`16px`}\n                      style={{ flexShrink: 0 }}\n                    />\n                    <Typography textColor=\"neutral700\">\n                      {formatMessage({\n                        id: 'pages.PurchaseRelease.perks1',\n                        defaultMessage: 'Add many entries to releases',\n                      })}\n                    </Typography>\n                  </Flex>\n\n                  <Flex gap={2}>\n                    <Check\n                      fill=\"success500\"\n                      width={`16px`}\n                      height={`16px`}\n                      style={{ flexShrink: 0 }}\n                    />\n                    <Typography textColor=\"neutral700\">\n                      {formatMessage({\n                        id: 'pages.PurchaseRelease.perks2',\n                        defaultMessage: 'Quickly identify entries containing errors',\n                      })}\n                    </Typography>\n                  </Flex>\n\n                  <Flex gap={2}>\n                    <Check\n                      fill=\"success500\"\n                      width={`16px`}\n                      height={`16px`}\n                      style={{ flexShrink: 0 }}\n                    />\n                    <Typography textColor=\"neutral700\">\n                      {formatMessage({\n                        id: 'pages.PurchaseRelease.perks3',\n                        defaultMessage: 'Schedule their publication, or publish them manually',\n                      })}\n                    </Typography>\n                  </Flex>\n                </Flex>\n\n                <Flex gap={2} marginTop={7}>\n                  <LinkButton\n                    variant=\"default\"\n                    href=\"https://strapi.io/pricing-self-hosted?utm_campaign=In-Product-CTA&utm_source=Releases\"\n                  >\n                    {formatMessage({\n                      id: 'Settings.page.purchase.upgrade.cta',\n                      defaultMessage: 'Upgrade',\n                    })}\n                  </LinkButton>\n                  <LinkButton\n                    variant=\"tertiary\"\n                    endIcon={<ExternalLink />}\n                    href=\"https://strapi.io/features/releases?utm_campaign=In-Product-CTA&utm_source=Releases\"\n                  >\n                    {formatMessage({\n                      id: 'Settings.page.purchase.learn-more.cta',\n                      defaultMessage: 'Learn more',\n                    })}\n                  </LinkButton>\n                </Flex>\n              </Flex>\n            </Grid.Item>\n            <Grid.Item col={6} s={12} background=\"primary100\" minHeight={'280px'}>\n              <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n                <img\n                  src={illustration}\n                  alt=\"purchase-page-content-releases-illustration\"\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'cover',\n                    objectPosition: 'top left',\n                  }}\n                />\n              </div>\n            </Grid.Item>\n          </Grid.Root>\n        </Box>\n      </Main>\n    </Layouts.Root>\n  );\n};\n\nexport { PurchaseContentReleases };\n"],"names":["PurchaseContentReleases","formatMessage","useIntl","currentTheme","useTypedSelector","state","admin_app","theme","illustration","lightIllustration","darkIllustration","_jsx","Layouts","Root","_jsxs","Main","Header","title","id","defaultMessage","Box","marginLeft","RESPONSIVE_DEFAULT_SPACING","marginRight","shadow","hasRadius","background","borderColor","overflow","Grid","Item","col","s","alignItems","Flex","direction","padding","width","PaperPlane","fill","height","paddingTop","paddingBottom","Typography","variant","fontWeight","gap","Check","style","flexShrink","textColor","marginTop","LinkButton","href","endIcon","ExternalLink","minHeight","div","position","img","src","alt","top","left","objectFit","objectPosition"],"mappings":"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"}