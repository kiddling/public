# Fluent Bit Configuration for Log Aggregation
# 
# Collects logs from Docker containers and forwards to various outputs
# Integrates with existing docker-compose setup

[SERVICE]
    # Flush logs every 5 seconds
    Flush        5
    # Set log level (error, warning, info, debug, trace)
    Log_Level    info
    # Daemon mode (off for Docker)
    Daemon       Off
    # Enable HTTP server for monitoring
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_Port    2020
    # Storage for buffering
    storage.path              /var/log/flb-storage/
    storage.sync              normal
    storage.checksum          off
    storage.max_chunks_up     128
    storage.backlog.mem_limit 5M

# Input: Docker container logs
[INPUT]
    Name              forward
    Listen            0.0.0.0
    Port              24224
    Buffer_Chunk_Size 1M
    Buffer_Max_Size   6M

# Input: Frontend logs (Nuxt)
[INPUT]
    Name              tail
    Path              /var/log/containers/frontend*.log
    Parser            docker
    Tag               frontend.*
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Input: CMS logs (Strapi)
[INPUT]
    Name              tail
    Path              /var/log/containers/cms*.log
    Parser            docker
    Tag               cms.*
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Input: Nginx logs
[INPUT]
    Name              tail
    Path              /var/log/nginx/access.log
    Parser            nginx
    Tag               nginx.access
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

[INPUT]
    Name              tail
    Path              /var/log/nginx/error.log
    Parser            nginx_error
    Tag               nginx.error
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Parser: Docker JSON format
[PARSER]
    Name        docker
    Format      json
    Time_Key    time
    Time_Format %Y-%m-%dT%H:%M:%S.%L
    Time_Keep   On

# Parser: Nginx access logs
[PARSER]
    Name        nginx
    Format      regex
    Regex       ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")
    Time_Key    time
    Time_Format %d/%b/%Y:%H:%M:%S %z

# Parser: Nginx error logs
[PARSER]
    Name        nginx_error
    Format      regex
    Regex       ^(?<time>[^ ]+ [^ ]+) \[(?<level>[^\]]+)\] (?<pid>\d+)#(?<tid>\d+): (?<message>.*)$
    Time_Key    time
    Time_Format %Y/%m/%d %H:%M:%S

# Filter: Add hostname and environment
[FILTER]
    Name                modify
    Match               *
    Add                 hostname ${HOSTNAME}
    Add                 environment ${NODE_ENV}

# Filter: Parse JSON logs from applications
[FILTER]
    Name                parser
    Match               frontend.*
    Key_Name            log
    Parser              json
    Reserve_Data        On
    Preserve_Key        On

[FILTER]
    Name                parser
    Match               cms.*
    Key_Name            log
    Parser              json
    Reserve_Data        On
    Preserve_Key        On

# Filter: Kubernetes metadata enrichment (if using K8s)
[FILTER]
    Name                kubernetes
    Match               kube.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
    Kube_Tag_Prefix     kube.var.log.containers.
    Merge_Log           On
    Keep_Log            Off

# Output: Stdout (for debugging)
[OUTPUT]
    Name   stdout
    Match  *
    Format json_lines

# Output: Elasticsearch (uncomment and configure)
# [OUTPUT]
#     Name            es
#     Match           *
#     Host            elasticsearch
#     Port            9200
#     Logstash_Format On
#     Logstash_Prefix fluentbit
#     Retry_Limit     5
#     Type            _doc
#     Include_Tag_Key On
#     Tag_Key         @tag

# Output: File (for local storage)
[OUTPUT]
    Name            file
    Match           *
    Path            /var/log/fluentbit
    Format          json_lines
    mkdir           On

# Output: Loki (for Grafana Loki)
# [OUTPUT]
#     Name            loki
#     Match           *
#     Host            loki
#     Port            3100
#     Labels          job=fluentbit, hostname=${HOSTNAME}
#     Label_keys      $environment,$level
#     Line_format     json

# Output: CloudWatch Logs (for AWS)
# [OUTPUT]
#     Name                cloudwatch_logs
#     Match               *
#     region              us-east-1
#     log_group_name      /aws/ecs/strapi-app
#     log_stream_prefix   from-fluent-bit-
#     auto_create_group   true

# Output: Datadog (uncomment and configure)
# [OUTPUT]
#     Name            datadog
#     Match           *
#     Host            http-intake.logs.datadoghq.com
#     TLS             on
#     apikey          YOUR_DATADOG_API_KEY
#     dd_service      strapi-app
#     dd_source       docker
#     dd_tags         env:production,team:devops
